# Generated by Django 2.2.1 on 2019-06-04 19:06

import ckeditor_uploader.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('service_provider', '0001_initial'),
        ('ngo_npo_profile', '0001_initial'),
        ('companies', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Categories',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='CategoryToPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainsite.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=100)),
                ('quote_note', models.TextField(max_length=255)),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=50)),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='VideoPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='Video title', max_length=100)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField()),
                ('video_url', models.URLField(blank=True, help_text='example: http://www.youtube/myvideourl')),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('company', models.ForeignKey(blank=True, help_text='Assign post to Company', null=True, on_delete=django.db.models.deletion.CASCADE, to='companies.Company')),
                ('ngo_or_npo', models.ForeignKey(blank=True, help_text='please assign post to NGO or NPO', null=True, on_delete=django.db.models.deletion.CASCADE, to='ngo_npo_profile.Organisation')),
                ('service_provider', models.ForeignKey(blank=True, help_text='Assign post to Service Provider', null=True, on_delete=django.db.models.deletion.CASCADE, to='service_provider.ServiceProvider')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('post_owner', models.CharField(blank=True, help_text='Insert an author in case the author did not own that', max_length=50)),
                ('slug', models.SlugField(max_length=150, unique=True)),
                ('image_url', models.FileField(default='static/images/postnoimage.png', upload_to='post/')),
                ('expect', models.TextField(max_length=255)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('tags', models.CharField(blank=True, max_length=255)),
                ('is_breaking_news', models.BooleanField(blank=True, default=False)),
                ('type_of_the_post', models.CharField(blank=True, choices=[('headline', 'headline'), ('company-news', 'company-news'), ('news', 'news')], max_length=50)),
                ('status', models.CharField(choices=[('draft', 'draft'), ('published', 'published')], default='draft', max_length=10)),
                ('author', models.ForeignKey(help_text='Site author', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ManyToManyField(blank=True, through='mainsite.CategoryToPost', to='mainsite.Category')),
                ('company', models.ForeignKey(blank=True, help_text='Assign post to Company', null=True, on_delete=django.db.models.deletion.CASCADE, to='companies.Company')),
                ('ngo_or_npo', models.ForeignKey(blank=True, help_text='please assign post to NGO or NPO', null=True, on_delete=django.db.models.deletion.CASCADE, to='ngo_npo_profile.Organisation')),
                ('service_provider', models.ForeignKey(blank=True, help_text='Assign post to Service Provider', null=True, on_delete=django.db.models.deletion.CASCADE, to='service_provider.ServiceProvider')),
            ],
        ),
        migrations.CreateModel(
            name='Opportunity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=150, unique=True)),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('expect', models.TextField(blank=True, max_length=150)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('company_name', models.CharField(blank=True, max_length=100)),
                ('company_email', models.EmailField(blank=True, max_length=254)),
                ('role', models.CharField(blank=True, max_length=50)),
                ('reporting_to', models.CharField(blank=True, max_length=50)),
                ('employment_term', models.CharField(blank=True, choices=[('Fixed Term', 'Fixed Term'), ('Permanent', 'Permanent')], max_length=20)),
                ('location', models.CharField(choices=[('Eastern Cape', 'Eastern Cape'), ('Free State', 'Free State'), ('Gauteng', 'Gauteng'), ('KwaZulu-Natal', 'KwaZulu-Natal'), ('Limpopo', 'Limpopo'), ('Mpumalanga', 'Mpumalanga'), ('North West', 'North West'), ('Northern Cape', 'Northern Cape'), ('Western Cape', 'Western Cape')], max_length=20)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('company_logo', models.FileField(default='/static/images/wecanchangeopportunity.jpg', upload_to='opportunities/')),
                ('category', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='mainsite.Category')),
                ('company', models.ForeignKey(blank=True, help_text='Assign Opportunity to Company or leave blank', null=True, on_delete=django.db.models.deletion.CASCADE, to='companies.Company')),
                ('ngo_or_npo', models.ForeignKey(blank=True, help_text='Assign Opportunity to NGO, NPO or leave blank', null=True, on_delete=django.db.models.deletion.CASCADE, to='ngo_npo_profile.Organisation')),
                ('service_provider', models.ForeignKey(blank=True, help_text='Assign post to Service Provider', null=True, on_delete=django.db.models.deletion.CASCADE, to='service_provider.ServiceProvider')),
            ],
            options={
                'verbose_name': 'Jobs',
                'verbose_name_plural': 'Jobs',
            },
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('send', 'Send')], max_length=10)),
                ('date_to_be_sent', models.DateTimeField(default=django.utils.timezone.now)),
                ('company', models.ForeignKey(blank=True, help_text='Select to assign this newsletter', null=True, on_delete=django.db.models.deletion.CASCADE, to='companies.Company')),
                ('organisation', models.ForeignKey(blank=True, help_text='Select to assign this newsletter', null=True, on_delete=django.db.models.deletion.CASCADE, to='ngo_npo_profile.Organisation')),
                ('service_provider', models.ForeignKey(blank=True, help_text='Select to assign this newsletter', null=True, on_delete=django.db.models.deletion.CASCADE, to='service_provider.ServiceProvider')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Event name', max_length=100)),
                ('slug', models.SlugField(max_length=150, unique=True)),
                ('start_date', models.DateField(default=datetime.date.today, help_text='Starting Date', verbose_name='Starting Date')),
                ('end_date', models.DateField(help_text='Ending Date', verbose_name='Ending Date')),
                ('start_time', models.TimeField(help_text='Starting time', verbose_name='Starting time')),
                ('end_time', models.TimeField(help_text='Ending time', verbose_name='Ending time')),
                ('organisation_name', models.CharField(blank=True, max_length=100)),
                ('organisation_email', models.EmailField(max_length=254)),
                ('organisation_phone', models.CharField(blank=True, max_length=15)),
                ('event_main_guest', models.FileField(default='static/images/noprofile.png', upload_to='events/')),
                ('event_main_guest_name', models.CharField(blank=True, max_length=100)),
                ('event_address', models.CharField(blank=True, max_length=255)),
                ('venue_name', models.CharField(blank=True, max_length=50)),
                ('expect', models.TextField(max_length=368)),
                ('notes', ckeditor_uploader.fields.RichTextUploadingField(blank=True)),
                ('category', models.ForeignKey(help_text='Category name', on_delete=django.db.models.deletion.CASCADE, to='mainsite.Category')),
                ('company', models.ForeignKey(blank=True, help_text='Assign Event to Company or leave blank', null=True, on_delete=django.db.models.deletion.CASCADE, to='companies.Company')),
                ('ngo_or_npo', models.ForeignKey(blank=True, help_text='Assign Event to NGO, NPO or leave blank', null=True, on_delete=django.db.models.deletion.CASCADE, to='ngo_npo_profile.Organisation')),
                ('service_provider', models.ForeignKey(blank=True, help_text='Assign post to Service Provider', null=True, on_delete=django.db.models.deletion.CASCADE, to='service_provider.ServiceProvider')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.AddField(
            model_name='categorytopost',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainsite.Post'),
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activate', models.CharField(choices=[('active', 'Active'), ('deactivate', 'Deactivate')], default='deactivate', max_length=20)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='companies.Company')),
                ('ngo_npo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ngo_npo_profile.Organisation')),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service_provider.ServiceProvider')),
            ],
        ),
    ]
